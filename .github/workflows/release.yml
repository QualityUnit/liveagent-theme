name: Release

on:
  push:
    tags:
      - '[0-9]+.[0-9]+.[0-9]'
      - '[0-9]+.[0-9]+.[0-9]+-nightly'
  workflow_call:
    secrets:
      CICD_USER_PAT:
        required: true

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup PHP 7.4
        uses: shivammathur/setup-php@v2
        with:
          php-version: "7.4"

      - name: Setup Node.js 16.x
        uses: actions/setup-node@v3
        with:
          node-version: "16.x"

      - name: Install Composer dependencies
        run: composer install

      - name: Install Yarn dependencies [theme]
        run: yarn

      - name: Build CSS and JS [theme]
        run: yarn build

      - name: Remove unnecessary files [theme]
        run: rm -rf node_modules vendor .git .idea .github .husky *.md *.lock .editorconfig .eslintignore .eslintrc .gitignore .stylelintrc composer.json gulpfile.js commitlint.config.js package.json phpcs.xml

#      - name: Install Yarn dependencies [web-calc]
#        working-directory: ./apps/web-calc/
#        run: yarn
#
#      - name: Build CSS and JS [web-calc]
#        working-directory: ./apps/web-calc/
#        run: yarn build
#
#      - name: Remove unnecessary files [web-calc]
#        working-directory: ./apps/web-calc/
#        run: rm -rf node_modules public src build.js package.json README.md yarn.lock
#
#      - name: Install Yarn dependencies [web-calc-featured]
#        working-directory: ./apps/web-calc-featured/
#        run: yarn
#
#      - name: Build CSS and JS [web-calc-featured]
#        working-directory: ./apps/web-calc-featured/
#        run: yarn build
#
#      - name: Remove unnecessary files [web-calc-featured]
#        working-directory: ./apps/web-calc-featured/
#        run: rm -rf node_modules public src build.js package.json README.md yarn.lock
#
#      - name: Install Yarn dependencies [typing-test]
#        working-directory: ./apps/typing-test/
#        run: yarn
#
#      - name: Build CSS and JS [typing-test]
#        working-directory: ./apps/typing-test/
#        run: yarn build
#
#      - name: Remove unnecessary files [typing-test]
#        working-directory: ./apps/typing-test/
#        run: rm -rf node_modules public src .babelrc package.json README.md tsconfig.json webpack.config.js yarn.lock
#
#      - name: Install Yarn dependencies [qu-checklists]
#        working-directory: ./lib/widgets/qu-checklists/
#        run: yarn
#
#      - name: Build CSS and JS [qu-checklists]
#        working-directory: ./lib/widgets/qu-checklists/
#        run: yarn build
#
#      - name: Remove unnecessary files [qu-checklists]
#        working-directory: ./lib/widgets/qu-checklists/
#        run: rm -rf node_modules package.json yarn.lock webpack.config.js
#
#      - name: Install Yarn dependencies [qu-howtos]
#        working-directory: ./lib/widgets/qu-howtos/
#        run: yarn
#
#      - name: Build CSS and JS [qu-howtos]
#        working-directory: ./lib/widgets/qu-howtos/
#        run: yarn build
#
#      - name: Remove unnecessary files [qu-howtos]
#        working-directory: ./lib/widgets/qu-howtos/
#        run: rm -rf node_modules package.json yarn.lock webpack.config.js
#
#      - name: Install Yarn dependencies [qu-expertnote]
#        working-directory: ./lib/widgets/qu-expertnote/
#        run: yarn
#
#      - name: Build CSS and JS [qu-expertnote]
#        working-directory: ./lib/widgets/qu-expertnote/
#        run: yarn build
#
#      - name: Remove unnecessary files [qu-expertnote]
#        working-directory: ./lib/widgets/qu-expertnote/
#        run: rm -rf node_modules package.json yarn.lock webpack.config.js
#
#      - name: Install Yarn dependencies [qu-usecase]
#        working-directory: ./lib/widgets/qu-usecase/
#        run: yarn
#
#      - name: Build CSS and JS [qu-usecase]
#        working-directory: ./lib/widgets/qu-usecase/
#        run: yarn build
#
#      - name: Remove unnecessary files [qu-usecase]
#        working-directory: ./lib/widgets/qu-usecase/
#        run: rm -rf node_modules package.json yarn.lock webpack.config.js
#
#      - name: Install Yarn dependencies [statistics]
#        working-directory: ./lib/widgets/statistics/
#        run: yarn
#
#      - name: Build CSS and JS [statistics]
#        working-directory: ./lib/widgets/statistics/
#        run: yarn build
#
#      - name: Remove unnecessary files [statistics]
#        working-directory: ./lib/widgets/statistics/
#        run: rm -rf node_modules package.json yarn.lock

  release:
    name: Release
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Version
        id: version
        uses: actions-ecosystem/action-regex-match@v2
        with:
          text: ${{ github.ref }}
          regex: ".*/([^/]+)$"

      - name: Create a zip file
        run: zip -r liveagent_${{ steps.version.outputs.group1 }}.zip .

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v0.1.14
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          draft: false
          prerelease: false
          body: See changes in the [CHANGELOG.md](CHANGELOG.md)
          files: ./liveagent_${{ steps.version.outputs.group1 }}.zip

  deploy:
    name: Deploy
    needs: release
    runs-on: ubuntu-latest
    steps:
      - name: Version
        id: version
        uses: actions-ecosystem/action-regex-match@v2
        with:
          text: ${{ github.ref }}
          regex: ".*/([^/]+)$"

      - name: Trigger downstream pipeline
        id: trigger
        uses: aurelien-baudet/workflow-dispatch@v2
        with:
          workflow: update.yml
          repo: QualityUnit/liveagent-wp
          ref: dev
          token: ${{ secrets.CICD_USER_PAT }}
          wait-for-completion-interval: 5s
          inputs: '{
                  "repository":"liveagent-wp",
                  "version":"${{ steps.version.outputs.group1 }}"
                }'
